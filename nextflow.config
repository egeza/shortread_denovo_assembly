/*
 * -------------------------------------------------
 *  ILIFU cluster config file (denovoassemblers module)
 * -------------------------------------------------
 * http://www.ilifu.ac.za/
 */

manifest {
    name            = 'shortread-denovo-genome-assembly'
    author          = """Ephifania Geza"""
    homePage        = 'https://github.com/egeza'
    description     = """Denovo genome assembly using masuRCA, soapdenovo2, spaDes, velvet, minia, striDe and platanus, misaassembly correction and quality checking."""
    mainScript      = 'assembly.nf'
    nextflowVersion = '!>=23.04.4'
    version         = '1.0'
   // doi             = 'https://doi.org/10.5281/zenodo.1400710'
}

params {

    // General parameters
    datadir = "${launchDir}/data"
    outdir = "${launchDir}/results"

    // Input parameters
    reads = "${params.datadir}/*R{1,2}.fastq"

    // Trimmomatic
    slidingwindow = "SLIDINGWINDOW:4:15"
    // params.avgqual = "AVGQUAL:30"
    adapters = "ILLUMINACLIP:TruSeq3-PE.fa:4:30:10"
    crop = "CROP:145"
    leading = "LEADING:15"
    trailing = "TRAILING:15"

    // Trimmomatic / spades
    threads = 8

    // Config options

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '232.GB'
    max_cpus                   = 32
    max_time                   = '336.h'
}
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        cacheDir = "/cbio/projects/026/images/"
        process.container = "/cbio/projects/026/images/shortread_denovo_assemblers_2023-12-04.simg"
    }
    ilifu {
        executor{
            queueSize = 100
        }
        process {
            executor        = 'slurm'
            queue           = 'Main'
            memory          = { 30.GB * task.attempt }
            cpus            = { 1 * task.attempt }
            time            = { 72.h }
            maxRetries      = 3
            maxErrors       = 10000
            errorStrategy   = 'retry'
            clusterOptions  = { "--mail-user=ephie.geza@uct.ac.za" }
        }
    }
    
}

process {
    stageInMode = 'symlink'
    stageOutMode = 'rsync'
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }
    process.container = "/cbio/projects/026/images/shortread_denovo_assemblers_2023-12-04.simg"
    
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognised by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    // See https://www.nextflow.io/docs/latest/config.html#config-process-selectors
    
    withLabel:"low" {
        cpus   = { 4 }
        memory = { 12.GB }
        time   = { 6.h }
    }
    withLabel:"medium" {
        cpus   = {  6  }
        memory = { 36.GB }
        time   = {  12.h  }
    }
    withLabel:"high" {
        cpus   = { 12   }
        memory = {  72.GB  }
        time   = { 24.h  }
    }
    
    withLabel:"high_memory" {
        cpus   = { 16  }
        memory = { 232.GB }
        time   = { 96.h }
    }

    withLabel:"high_spades" {
        cpus   = { 16  }
        memory = { 232.GB }
        time   = { 96.h }
        container = "/cbio/projects/025/images/769bd43d8bc4-2019-03-04-4d3032297a78.img"
    }
     withLabel:"high_masurca" {
        cpus   = { 16  }
        memory = { 232.GB }
        time   = { 96.h }
        container = "/cbio/projects/026/images/denovo_assemblers_latest-2023-07-03-ee279da8a081.simg"
    }
    
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
    withName:CUSTOM_DUMPSOFTWAREVERSIONS {
        cache = false
    }
   // Increasing maxRetries, this will overwrite what we have in base.config
   //maxRetries = 4
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Set default registry for Docker and Podman independent of -profile
// Will not be used unless Docker / Podman are enabled
// Set to your registry if you have a mirror of containers
docker.registry = 'quay.io'

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}
